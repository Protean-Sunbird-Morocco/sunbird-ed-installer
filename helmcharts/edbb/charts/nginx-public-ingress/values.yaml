nameOverride: "nginx-public-ingress"
fullnameOverride: "nginx-public-ingress"

commonLabels:
  name: edbb

replicaCount: 1

image:
  repository:  sunbirded.azurecr.io/nginx-certbot
  tag: "v3"
  pullPolicy: IfNotPresent
  pullSecrets: []

podAnnotations: {}

podSecurityContext: {}
  # runAsNonRoot: true
  # runAsUser: 1001
  # fsGroup: 1001

securityContext: {}
  # readOnlyRootFilesystem: false
  # capabilities:
  #   drop:
  #   - ALL

service:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 80
    - name: https
      port: 443
      targetPort: 443

serviceMetrics:
  type: ClusterIP
  ports:
    - name: http
      port: 9145
      targetPort: 9145

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
      - /

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

# livenessProbe: {}
# Example:
livenessProbe: {}
  # httpGet:
  #   path: "/healthz"
  #   port: 8080
  # initialDelaySeconds: 5
  # periodSeconds: 5

# readinessProbe: {}
# Example:
readinessProbe: {}
  # httpGet:
  #   path: "/ready"
  #   port: 8080
  # initialDelaySeconds: 5
  # periodSeconds: 5

nodeSelector: {}
tolerations: []
affinity: {}

configmap:
  enabled: true

serviceAccount:
  create: true
  name: ""

serviceMonitor:
  enabled: true
  labels:
    release: monitoring
  # interval: 30s
  # scrapeTimeout: 10s
  # labels: {} # additional labels e.g. release: prometheus
  # honorLabels: true
  # jobLabel: "app.kubernetes.io/name"

# Example values.yaml structure
initContainers:
  # - name: init-myservice
  #   image: busybox:1.28
  #   command: ['sh', '-c', "until nslookup kubernetes.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]
  - name: wait-for-keycloak
    image: busybox
    command: ["/bin/sh", "-c"]
    args:
    - "timeout 300 sh -c 'until nc -z keycloak 8080; do echo waiting for keycloak; sleep 10; done'"
  - name: wait-for-kong
    image: busybox
    command: ["/bin/sh", "-c"]
    args:
    - "timeout 300 sh -c 'until nc -z kong 8000; do echo waiting for kong; sleep 10; done'"
  - name: wait-for-player
    image: busybox
    command: ["/bin/sh", "-c"]
    args:
    - "timeout 300 sh -c 'until nc -z player 3000; do echo waiting for player; sleep 10; done'"

sidecars: {}
  # - name: log-reader # Sidecar container
  #   image: busybox # Use another busybox image
  #   command: ["/bin/sh"] # Override the default command
  #   args: ["-c", "tail -f /var/log/app.log"] # Run a shell script that tails the log file

global:
  domain: "gcp-dev.sunbirded.org"
  gcp_public_bucket_name: 
  ## gcp_cloud_storage_base_url: "cloudworklabs.in"
  local_development: false

commonAnnotations:
  reloader.stakater.com/auto: "true"
  cloud.google.com/load-balancer-type: "External"

merge_domain: "merge.example.com"
merge_domain_status: true

proxy_private_key: |
  -----BEGIN PRIVATE KEY-----
  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
  bFhbQKZ7/85JIpbNfx7cIAAUZ5BUdw==
  -----END PRIVATE KEY-----
proxy_certificate: |
  -----BEGIN CERTIFICATE-----
  MIIF+TCCBOGgAwIBAgISAwmVvY2ZIJAseNveeBid5ZXCMA0GCSqGSIb3DQEBCwUA
  MDMxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQwwCgYDVQQD
  EwNSMTAwHhcNMjQxMDI1MTAzODIyWhcNMjUwMTIzMTAzODIxWjAgMR4wHAYDVQQD
  ExVnY3AtZGV2LnN1bmJpcmRlZC5vcmcwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAw
  ggIKAoICAQC0C5/OVtSu85OCsgJy0gZP66DjKjOnPuD7t3xFenQk7pql+CCflYdJ
  sRFheWAj4uzKXDXUn2yAXOqHpd0zzq50wYM4qtfBbcS0dnr0yRhPHC8HTUjk/CBA
  ZCdHOosUGetH8YI4kh+qpANpayrF9Kn6VNiW6yp/A97XvkWC25xUXpwYdinakAVj
  A2ekHveCs5DuKOWZsc+RYUOaOT3hnguXw6AGJtIqyWl3pgiKQ65XEZkL1XCVw0I8
  dpizYrMrqJbWCVkgN73Keh0veyFGkpcbV2FpuFHziRCI0TXp4qtgKdWOMBsMcivy
  agURuz/gjS3bUVmLyz6OSrUeg6Sg49SDcV+2TpFRQI8AFIdrNs4jkMCQHOpJS1lB
  ucoDsHfYltLwCwjDn60W2lTQUjg2mojLJNVY9qylzdmtgaO5XJWz6M9o+ZuYmO3I
  YjGdgemtKJ4vxmbfABlk6wogQTtxMTUo9qQK45eh8qixu2GWhKStesqqmZpYl2lA
  ex4z5KYH/J1/fXoZ5S/yqJBMY3sbIOR06bBz69OtnbQ+/k/WLs7OUFqciRvgp3ib
  j43q4Ve5CVSXlJsfBb8/WWfIcBOUk6LIJdQUkgVcjL3qovQn7TySCnYZJYk1zG4L
  yIjLfSRRFtIu8GWZ+ilt0YvlKsKelSVtbHjEHLv2ie8cHzTJ2M5cXQIDAQABo4IC
  GDCCAhQwDgYDVR0PAQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEF
  BQcDAjAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBQcRR2MUxyVnqN9A46oPN+c6FJZ
  MDAfBgNVHSMEGDAWgBS7vMNHpeS8qcbDpHIMEI2iNeHI6DBXBggrBgEFBQcBAQRL
  MEkwIgYIKwYBBQUHMAGGFmh0dHA6Ly9yMTAuby5sZW5jci5vcmcwIwYIKwYBBQUH
  MAKGF2h0dHA6Ly9yMTAuaS5sZW5jci5vcmcvMCAGA1UdEQQZMBeCFWdjcC1kZXYu
  c3VuYmlyZGVkLm9yZzATBgNVHSAEDDAKMAgGBmeBDAECATCCAQMGCisGAQQB1nkC
  BAIEgfQEgfEA7wB2AObSMWNAd4zBEEEG13G5zsHSQPaWhIb7uocyHf0eN45QAAAB
  ksN3EEkAAAQDAEcwRQIgGVjDkF4uMJR1S6K/1ogXas+obAJny/+NOHWR7E7H9ckC
  IQD8y8ncsqUvtnTORG6Pu+cF2FkyPVgsZlfdO1iPxoFo2wB1AM8RVu7VLnyv84db
  2Wkum+kacWdKsBfsrAHSW3fOzDsIAAABksN3EJEAAAQDAEYwRAIgFuALlj//8xqK
  eQRwz0biXBSwc4bpCSxUDiLhYVrwmSICIGcHHkFgJgQHGTGJgn2Ck/BocNDiIvLU
  SDFZnNurn+gKMA0GCSqGSIb3DQEBCwUAA4IBAQBtATzKyelpph2ZjNRQjbi/GWy5
  UBZZINg4ZKJupuw3qlhmPKF7cuHvH+GxWLd/O2jKa8ISjeI4nI+oYXpRfFwhm43c
  lbh96qdIbmCbjMbEu79MaHVQKRKCsuSCBeYOdFka1gLpkx4DRXfgRtJVBJWZSfR2
  GHvckwgUmbxWYFlFRTj6TugniWAKd4EcuyOAgIuBlj/GxzCVDPRa9I9VPgRWkGXB
  JGxsGyVEscGFWuZBF93JorYWrxy2AtON+Mnw5AgTbbZQw0hM4U1x12ky5ZyUWNbh
  An9yfUhSS58Fx2lCC87tKd6tEWmkVrbeyQHCTdJY2oLO+DsIa/CPVbBzhLNT
  -----END CERTIFICATE-----
  -----BEGIN CERTIFICATE-----
  MIIFBTCCAu2gAwIBAgIQS6hSk/eaL6JzBkuoBI110DANBgkqhkiG9w0BAQsFADBP
  MQswCQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJuZXQgU2VjdXJpdHkgUmVzZWFy
  Y2ggR3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBYMTAeFw0yNDAzMTMwMDAwMDBa
  Fw0yNzAzMTIyMzU5NTlaMDMxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBF
  bmNyeXB0MQwwCgYDVQQDEwNSMTAwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
  AoIBAQDPV+XmxFQS7bRH/sknWHZGUCiMHT6I3wWd1bUYKb3dtVq/+vbOo76vACFL
  YlpaPAEvxVgD9on/jhFD68G14BQHlo9vH9fnuoE5CXVlt8KvGFs3Jijno/QHK20a
  /6tYvJWuQP/py1fEtVt/eA0YYbwX51TGu0mRzW4Y0YCF7qZlNrx06rxQTOr8IfM4
  FpOUurDTazgGzRYSespSdcitdrLCnF2YRVxvYXvGLe48E1KGAdlX5jgc3421H5KR
  mudKHMxFqHJV8LDmowfs/acbZp4/SItxhHFYyTr6717yW0QrPHTnj7JHwQdqzZq3
  DZb3EoEmUVQK7GH29/Xi8orIlQ2NAgMBAAGjgfgwgfUwDgYDVR0PAQH/BAQDAgGG
  MB0GA1UdJQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATASBgNVHRMBAf8ECDAGAQH/
  AgEAMB0GA1UdDgQWBBS7vMNHpeS8qcbDpHIMEI2iNeHI6DAfBgNVHSMEGDAWgBR5
  tFnme7bl5AFzgAiIyBpY9umbbjAyBggrBgEFBQcBAQQmMCQwIgYIKwYBBQUHMAKG
  Fmh0dHA6Ly94MS5pLmxlbmNyLm9yZy8wEwYDVR0gBAwwCjAIBgZngQwBAgEwJwYD
  VR0fBCAwHjAcoBqgGIYWaHR0cDovL3gxLmMubGVuY3Iub3JnLzANBgkqhkiG9w0B
  AQsFAAOCAgEAkrHnQTfreZ2B5s3iJeE6IOmQRJWjgVzPw139vaBw1bGWKCIL0vIo
  zwzn1OZDjCQiHcFCktEJr59L9MhwTyAWsVrdAfYf+B9haxQnsHKNY67u4s5Lzzfd
  u6PUzeetUK29v+PsPmI2cJkxp+iN3epi4hKu9ZzUPSwMqtCceb7qPVxEbpYxY1p9
  1n5PJKBLBX9eb9LU6l8zSxPWV7bK3lG4XaMJgnT9x3ies7msFtpKK5bDtotij/l0
  GaKeA97pb5uwD9KgWvaFXMIEt8jVTjLEvwRdvCn294GPDF08U8lAkIv7tghluaQh
  1QnlE4SEN4LOECj8dsIGJXpGUk3aU3KkJz9icKy+aUgA+2cP21uh6NcDIS3XyfaZ
  QjmDQ993ChII8SXWupQZVBiIpcWO4RqZk3lr7Bz5MUCwzDIA359e57SSq5CCkY0N
  4B6Vulk7LktfwrdGNVI5BsC9qqxSwSKgRJeZ9wygIaehbHFHFhcBaMDKpiZlBHyz
  rsnnlFXCb5s8HKn5LsUgGvB24L7sGNZP2CX7dhHov+YhD+jozLW2p9W4959Bz2Ei
  RmqDtmiXLnzqTpXbI+suyCsohKRg6Un0RC47+cpiVwHiXZAW+cn8eiNIjqbVgXLx
  KPpdzvvtTnOPlC7SQZSYmdunr3Bf9b77AiC/ZidstK36dRILKz7OA54=
  -----END CERTIFICATE-----
nginx_per_ip_connection_limit: 400

cache_long_validity: 5m
cache_medium_validity: 4m
large_cache_keys: 10m
medium_cache_keys: 5m
small_cache_keys: 2m
large_cache_size: 100m
medium_cache_size: 50m
small_cache_size: 20m
large_cache_inactive: 10m
medium_cache_inactive: 10m
small_cache_inactive: 10m

apple_universal_links: '{"applinks":{"apps":[],"details":[{"appID":"123456.dev.sunbird.app","paths":["/explore","/dial/*","/get/dial","/play/content","/play/collection","/learn/course","/explore-course/course","/explore-course","/search","/search/Library","/faq","/profile","/play/quiz","/explore","/learn","/resources"]}]}}'

lets_encrypt_ssl: false