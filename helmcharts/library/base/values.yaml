nameOverride: ""
fullnameOverride: ""

replicaCount: 1

image:
  repository: nginx
  tag: "latest"
  pullPolicy: IfNotPresent
  pullSecrets: []

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: false
  runAsUser: 0
  fsGroup: 0

securityContext: {}

service:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
      - /

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

  livenessProbe: null
           

# livenessProbe:
#   httpGet:
#     path: "/healthz"
#     port: 8080
#   initialDelaySeconds: 5
#   periodSeconds: 5

# readinessProbe:
#   httpGet:
#     path: "/ready"
#     port: 8080
#   initialDelaySeconds: 5
#   periodSeconds: 5

nodeSelector: {}
tolerations: []
affinity: {}

configmap:
  enabled: true
  mountPath: /config


# configmap:
#   enabled: true
#   mountPath: /etc/nginx/conf.d/default.conf
#   data:
#     default.conf: |
#       server {
#           listen 80;
#           server_name localhost;
          
#           location / {
#               root /usr/share/nginx/html;
#               index index.html index.htm;
#           }

#           # Disable client body buffering to avoid using the temp directory
#           client_body_buffer_size 0;
#       }

serviceAccount:
  create: true
  name: ""

serviceMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 10s
  labels: {} # additional labels e.g. release: prometheus
  honorLabels: true
  jobLabel: "app.kubernetes.io/name"

extraVolumes:
  - name: nginx-cache
    emptyDir: {}

extraVolumeMounts:
  - name: nginx-cache
    mountPath: /var/cache/nginx

initContainers: {}
  # - name: init-myservice
  #   image: busybox:1.28
  #   command: ['sh', '-c', "until nslookup kubernetes.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]

sidecars: {}
  # - name: log-reader # Sidecar container
  #   image: busybox # Use another busybox image
  #   command: ["/bin/sh"] # Override the default command
  #   args: ["-c", "tail -f /var/log/app.log"]

opa:
  enabled: false
